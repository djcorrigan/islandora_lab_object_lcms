<?php

/**
* @file islandora_lcms_ingest.test
*
* First, attempts to ingest an lcms object.
*
* Then the test will purge the object.
*
* The pid used for the duration of this test will be islandora:test_lcms
*
*
* @author Dalton Mackenzie <demackenzie@upei.ca>
*/

class IslandoraLCMSIngestTestCase extends IslandoraWebTestCase {

  /**
  * Get test information
  *
  * @see IslandoraWebTestCase::getInfo()
  */

  public static function getInfo() {
    return array(
      'name' => 'LCMS Ingest/Purge Test',
      'description' => 'Ingests and deletes an lcms object',
      'group' => 'Islandora LCMS',
    );
  }

  /**
  * Set up the test environment.
  *
  * @see IslandoraWebTestCase::setUp()
  */

  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_lab_object_lcms',
      'islandora_basic_collection',
      )
    );
  }

  /**
  * @function testIngestLCMS()
  *
  * @author Dalton Mackenzie <demackenzie@upei.ca>
  *
  * Creates an administrative user and attempts to ingest an lcms.
  */

  public function testIngestLCMS() {
    

    //Gets the admin user
    $user = $this->admin;

    //Logs them in.

    $this->drupalLogin($user);

    //Gets the path to prepend to fixtures/$datastream_file for the different datastream files
    //that need to be added to the object for the ingest test.

    $path = drupal_get_path('module','islandora_lab_object_lcms');
    $path = $path . "/";

    //Create a lcmsect properties array for the construction and ingestion of an lcms object.
    $lcms_properties = array();   //init the array
    $lcms_properties['label'] = 'lcms_test';   //Give it a label
    $lcms_properties['pid'] = 'islandora:test_lcms';  //PID
    $lcms_properties['models'] = array(   //The content model used is the lcmsect_cmodel
        'islandora:lcms_cmodel',
        );
    $lcms_properties['parent'] = 'islandora:root'; //Just use root as the parent for now, delete it at the end of the test.

    $lcms_datastreams = array(); // init the data streams array


    //The datastreams for the object will be taken from files in the fixtures directory
    
    $lcms_datastream_dc = array(); //Init the Dublin Core datastream
    $lcms_datastream_dc['dsid'] = 'DC';  //dsid comes from the ds composite model in the xml directory
    $lcms_datastream_dc['path'] = $path . 'fixtures/example_lcms_dc.xml'; //Path to the file containing the datastream
    $lcms_datastream_dc['control_group'] = 'M'; //M - managed by Fedora, X - in line XML
    $lcms_datastream_dc['mimetype'] = 'text/xml';

    $lcms_datastream_lcms = array(); //Init the LCMS datastream
    $lcms_datastream_lcms['dsid'] = 'LCMS'; //dsid comes from the ds composite model in the xml directory
    $lcms_datastream_lcms['path'] = $path . 'fixtures/example_lcms_lcms.xml'; //Path to the file containing the datastream
    $lcms_datastream_lcms['control_group'] = 'M'; //M - managed by Fedora, X - in line XML
    $lcms_datastream_lcms['mimetype'] = 'text/xml';

    $lcms_datastream_relsext = array(); //Init the RELS-EXT datastream
    $lcms_datastream_relsext['dsid'] = 'RELS-EXT'; //dsid comes from the ds composite model in the xml directory
    $lcms_datastream_relsext['path'] = $path . 'fixtures/example_lcms_relsext.rdf'; //Path to the file containing the datastream
    $lcms_datastream_relsext['control_group'] = 'M'; //M - managed by Fedora, X - in line XML
    $lcms_datastream_relsext['mimetype'] = 'text/xml';

    $lcms_datastream_raw = array(); //Init the RAW datastream
    $lcms_datastream_raw['dsid'] = 'RAW'; //dsid comes from the ds composite model in the xml directory
    $lcms_datastream_raw['path'] = $path . 'fixtures/example_lcms_raw.raw'; //Path to the file containing the datastream
    $lcms_datastream_raw['control_group'] = 'M'; //M - managed by Fedora, X - in line XML
    $lcms_datastream_raw['mimetype'] = 'text/plain';
    
    $lcms_datastream_csv = array(); //Init the CSV datastream
    $lcms_datastream_csv['dsid'] = 'CSV'; //dsid comes from the ds composite model in the xml directory
    $lcms_datastream_csv['path'] = $path . 'fixtures/example_lcms_csv.csv'; //Path to the file containing the datastream
    $lcms_datastream_csv['control_group'] = 'M'; //M - managed by Fedora, X - in line XML
    $lcms_datastream_csv['mimetype'] = 'text/csv';
    
    //Add all of the datastreams to the datastreams array

    $lcms_datastreams[] = $lcms_datastream_dc;
    $lcms_datastreams[] = $lcms_datastream_lcms;
    $lcms_datastreams[] = $lcms_datastream_relsext;
    $lcms_datastreams[] = $lcms_datastream_raw;
    $lcms_datastreams[] = $lcms_datastream_csv;

    //Ingest the object with its properties array and datastreams array.
    
    try {
      $lcms_test_object = $this->ingestConstructedObject($lcms_properties, $lcms_datastreams);
    }
    catch (RepositoryException $re) {
      echo 'Caught exception: ', $re->getMessage(), "\n";
    }
  
    //The safety can be turned off for this test because we are working within
    //the testing sandbox.

    $this->deleteObject('islandora:test_lcms', $button = NULL, $safety = FALSE);

  }
}
